# Default values for arkd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/arkade-os/arkd
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 7070
  targetPort: 7070

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  size: 8Gi
  accessMode: ReadWriteOnce
  storageClass: ""
  existingClaim: ""

database:
  create: true
  type: "postgres"
  url: "postgres://arkd:arkd@arkd-postgresql:5432/arkd?sslmode=disable"
  existingSecret: ""
  existingSecretKey: ""
  event:
    type: "postgres"
    url: "postgres://arkd-events:arkd-events@arkd-postgresql:5432/arkd-events?sslmode=disable"
    existingSecret: ""
    existingSecretKey: ""

postgresql:
  auth:
    postgresPassword: "postgres"
  primary:
    initdb:
      scripts:
        init.sql: |
          -- Create first database and user
          CREATE DATABASE arkd;
          CREATE USER arkd WITH ENCRYPTED PASSWORD 'arkd';
          GRANT ALL PRIVILEGES ON DATABASE arkd TO arkd;
          \c arkd
          GRANT USAGE, CREATE ON SCHEMA public TO arkd;

          -- Create second database and user
          CREATE DATABASE "arkd-events";
          CREATE USER "arkd-events" WITH ENCRYPTED PASSWORD 'arkd-events';
          GRANT ALL PRIVILEGES ON DATABASE "arkd-events" TO "arkd-events";
          \c "arkd-events"
          GRANT USAGE, CREATE ON SCHEMA public TO "arkd-events";

livestore:
  create: true
  type: "redis"
  url: "redis://arkd-redis-master:6379"
  existingSecret: ""
  existingSecretKey: ""

redis:
  architecture: "standalone"
  auth:
    enabled: false

arkd:
  logLevel: "4"
  roundInterval: "30"
  txBuilderType: "covenantless"
  unilateralExitDelay: "86400"
  boardingExitDelay: "7776000"
  esploraUrl: "https://blockstream.info/api"
  walletAddr: ""
  noMacaroons: false
  noTls: true
  unlocker:
    type: ""
    filePath: ""
    password: ""
    existingSecret: ""
    existingSecretKey: ""
  round:
    maxParticipantsCount: "128"
    minParticipantsCount: "1"
  utxo:
    maxAmount: "-1"
    minAmount: "-1"
  vtxo:
    maxAmount: "-1"
    minAmount: "-1"
    treeExpiry: "604672"